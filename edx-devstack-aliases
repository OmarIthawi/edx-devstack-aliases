#!/bin/bash
# Doc: `openedx` goes to the directory `~/work/openedx/edx-platform`
alias openedx='cd ~/work/openedx/edx-platform && git status'

quote () {
    # Doc (Internal): Quotes a bash argument.
    # Source: http://askubuntu.com/a/354923/110778
    local quoted=${1//\'/\'\\\'\'};
    printf "'%s'" "$quoted"
}

ensure_vagrant() {
  # Doc (Internal): Ensures that we're running inside an edX platform tree.
  bash -e <<SCRIPT
  for d in `pwd | tr '/' ' '`; do
    if [ -f Vagrantfile ]; then
      exit 0
    fi

    cd ..
  done
  exit 1
SCRIPT

  if [ $? -ne 0 ]; then
      echo "edX platform directory could not be detected" 1>&2
      echo "Please go to the correct directory" 1>&2
      echo "  e.g. 'cd ~/work/openedx/edx-platform'" 1>&2
      return 1
  fi
}

vagrant_ssh() {
  # Doc (Internal): A bit faster and lower-level alternative to the `$ vagrant ssh`
  if ! ensure_vagrant; then
    return 1
  fi

  CONFIG_FILE=`mktemp`

  vagrant ssh-config > $CONFIG_FILE

  ssh -F $CONFIG_FILE default $@

  rm $CONFIG_FILE
}

vagrant_exec() {
  # Doc (Internal): Sets the environment and executes a command inside vagrant.
  if ! ensure_vagrant; then
    return 1
  fi

  NO_PREREQ_INSTALL=${NO_PREREQ_INSTALL:-true}
  VAGRANT_SUDO_USER=${VAGRANT_SUDO_USER:-'vagrant'}
  PARAMS=$@

  if [[ -n "$PARAMS" ]]; then
    vagrant_ssh -o User=$VAGRANT_SUDO_USER -- NO_PREREQ_INSTALL=$NO_PREREQ_INSTALL $PARAMS
  else
    vagrant_ssh -o User=$VAGRANT_SUDO_USER
  fi
}

docker_edxapp_exec() {
    # Doc (Internal): Sets the environment and executes a command inside an edxapp devstack.
    NO_PREREQ_INSTALL=${NO_PREREQ_INSTALL:-true}
    PARAMS="$@"

    if [[ -n "$PARAMS" ]]; then
        docker exec -it edx.devstack.lms bash -c ". /edx/app/edxapp/nodeenvs/edxapp/bin/activate; . /edx/app/edxapp/venvs/edxapp/bin/activate; cd /edx/app/edxapp/edx-platform; NO_PREREQ_INSTALL=$NO_PREREQ_INSTALL $PARAMS"
    else
        echo 'Missing params'
    fi
}

edxapp() {
  # Doc: `edxapp`: Execute command as the `edxapp` user e.g `$ edxapp ls`
  if ensure_vagrant 2>/dev/null; then
    VAGRANT_SUDO_USER='edxapp' vagrant_exec "$@"
  else
    docker_edxapp_exec "$@"
  fi
}

vagrant_init_ssh() {
  # Doc: `vagrant_init_ssh`: Allow direct SSH via the edxapp user
  vagrant ssh -- bash -c "'sudo sed -i s=edxapp:/bin/false=edxapp:/bin/bash= -- /etc/passwd'"

  vagrant ssh -- bash -c "'sudo mkdir -p /edx/app/edxapp/.ssh'"
  vagrant ssh -- bash -c "'sudo cat /home/vagrant/.ssh/authorized_keys | sudo tee /edx/app/edxapp/.ssh/authorized_keys'"
  vagrant ssh -- bash -c "'sudo chown edxapp:edxapp -R /edx/app/edxapp/.ssh'"

  vagrant ssh -- bash -c "'sudo mkdir -p /edx/src/edxapp-envs/'"
  vagrant ssh -- bash -c "'test -f /edx/src/edxapp-envs/lms.env.json || sudo mv /edx/app/edxapp/{lms,cms}.{env,auth}.json /edx/src/edxapp-envs/' 2>/dev/null"
  vagrant ssh -- bash -c "'test -f /edx/src/edxapp-envs/lms.env.json && sudo ln -s /edx/src/edxapp-envs/{lms,cms}.{env,auth}.json /edx/app/edxapp/'"
  vagrant ssh -- bash -c "'sudo chown edxapp:edxapp -R /edx/src/edxapp-envs 2>/dev/null'"
  vagrant ssh -- bash -c "'sudo chown edxapp:edxapp /edx/src/edxapp-envs/{lms,cms}.{env,auth}.json'"
}

# Doc: `paver`: Executes a paver command as the `edxapp` user e.g `$ paver --help`
alias paver='edxapp paver'

# Doc: `manage.py`: Executes a manage.py command as the `edxapp` user e.g `$ manage.py --help`
alias manage.py='edxapp python manage.py'

# Doc: `pylint`: Executes pylint
alias pylint='edxapp pylint'

# Doc: `test_bokchoy_one`: Tests a single bokchoy test case (requires the --serveronly to be running)
alias test_bokchoy_one='paver test_bokchoy --testsonly --fasttest -t'

# Doc: `test_system_one`: Tests a single lms/cms unit and integration test case  e.g. `$ test_system_one lms/djangoapps/appsembler_api/tests/test_views.py
alias test_system_one='paver test_system --disable-migrations --fasttest -t'

# Doc: `test_cov_system_one`: Like `test_system_one`, with coverage report, and usually slower.
test_cov_system_one() {
  OEPN=`which xdg-open open | head -n 1`  # Mac and Linux support
  test_system_one "$@" && paver coverage && $OPEN reports/diff_coverage_combined.html
}
