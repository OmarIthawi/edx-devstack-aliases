#!/bin/bash
quote () {
    # Doc (Internal): Quotes a bash argument.
    # Source: http://askubuntu.com/a/354923/110778
    local quoted=${1//\'/\'\\\'\'};
    printf "'%s'" "$quoted"
}

find_up() {
  # Doc (Internal): Finds file in parent directories.
  # Source: https://unix.stackexchange.com/a/22215
  local path=$(pwd)
  while [[ "$path" != "" && ! -e "$path/$1" ]]; do
    path=${path%/*}
  done
  echo "$path"
}

ensure_docker() {
  # Doc (Internal): Ensures that we're running inside a docker devstack tree.
  local DEVSTACK_PATH=$(find_up devstack)

  if [ -z "$DEVSTACK_PATH" ]; then
      echo "Docker devstack directory could not be detected" 1>&2
      echo "Please go to the correct directory" 1>&2
      echo "  e.g. 'cd ~/work/openedx/edx-platform'" 1>&2
      return 1
  fi
}

devstack() {
  # Doc: `devstack`: Executes a command inside the docker devstack directory.
  if ! ensure_docker; then
    return 1
  fi

  local DEVSTACK_DIR=$(find_up devstack);
  local PARAMS="$@"
  bash -c "cd $DEVSTACK_DIR/devstack && pwd && $PARAMS"
}

docker_edxapp_exec() {
  # Doc (Internal): Sets the environment and executes a command inside an edxapp devstack.
  if ! ensure_docker; then
    return 1
  fi

  local NO_PREREQ_INSTALL=${NO_PREREQ_INSTALL:-true}
  local PARAMS="$@"

  if [[ -n "$PARAMS" ]]; then
      docker exec -it ${DEVSTACK_CONTAINER} bash -c "source /edx/app/edxapp/edxapp_env && cd /edx/app/edxapp/edx-platform/ && NO_PREREQ_INSTALL=$NO_PREREQ_INSTALL $PARAMS"
  else
      echo 'Missing params'
  fi
}

lms() {
  # Doc: `lms`: Execute command as the `edxapp` user in the lms e.g `$ lms ls`
  DEVSTACK_CONTAINER='edx.devstack.lms' docker_edxapp_exec "$@"
}

studio() {
  # Doc: `studio`: Execute command as the `edxapp` user in the studio e.g `$ studio ls`
  DEVSTACK_CONTAINER='edx.devstack.studio' docker_edxapp_exec "$@"
}

# Doc (Internal): `edxapp`: Legacy version of `lms`
alias edxapp='lms'

# Doc: `test_bokchoy_one`: Tests a single bokchoy test case (requires the --serveronly to be running)
alias test_bokchoy_one='edxapp paver test_bokchoy --testsonly --fasttest -t'

# Doc: `test_system_one`: Tests a single lms/cms unit and integration test case  e.g. `$ test_system_one lms/djangoapps/appsembler_api/tests/test_views.py
alias test_system_one='edxapp paver test_system --disable-migrations --fasttest -t'

# Doc: `test_cov_system_one`: Like `test_system_one`, with coverage report, and usually slower.
test_cov_system_one() {
  OEPN=`which xdg-open open | head -n 1`  # Mac and Linux support
  test_system_one "$@" && edxapp paver coverage && $OPEN reports/diff_coverage_combined.html
}
